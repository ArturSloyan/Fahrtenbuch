// <auto-generated />
using System;
using FahrtenbuchProjektCore.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FahrtenbuchProjektCore.Migrations
{
    [DbContext(typeof(JourneybookContext))]
    [Migration("20250522080759_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.5");

            modelBuilder.Entity("FahrtenbuchProjektCore.Models.CompanyCar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<int>("CarType")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LicencePlate")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("CompanyCars");
                });

            modelBuilder.Entity("FahrtenbuchProjektCore.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("FahrtenbuchProjektCore.Models.Journey", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CompanyCarId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("JourneyDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("KmDistanceArrival")
                        .HasColumnType("INTEGER");

                    b.Property<int>("KmDistanceDeparture")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PurposeOfTheJourney")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("TimeStampEnd")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("TimeStampStart")
                        .HasColumnType("TEXT");

                    b.Property<int>("TravelRoute")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CompanyCarId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Journeys");
                });

            modelBuilder.Entity("FahrtenbuchProjektCore.Models.Journey", b =>
                {
                    b.HasOne("FahrtenbuchProjektCore.Models.CompanyCar", "CompanyCar")
                        .WithMany()
                        .HasForeignKey("CompanyCarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FahrtenbuchProjektCore.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyCar");

                    b.Navigation("Employee");
                });
#pragma warning restore 612, 618
        }
    }
}
